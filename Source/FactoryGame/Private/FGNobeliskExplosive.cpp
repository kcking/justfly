// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGNobeliskExplosive.h"
#include "GameFramework/RotatingMovementComponent.h"

AFGNobeliskExplosive::AFGNobeliskExplosive() : Super() {
	this->mRotatingMovementComp = CreateDefaultSubobject<URotatingMovementComponent>(TEXT("RotatingMovementComponent"));
	this->mThrowRotation.Pitch = -360; this->mThrowRotation.Yaw = -35; this->mThrowRotation.Roll = -180;
	this->mDestroysRelevantActors = true;
	this->mDestroysFoliage = true;
	this->mMaxParticleSpawnsPerDetonation = 30;
	this->PrimaryActorTick.TickGroup = TG_PrePhysics; this->PrimaryActorTick.EndTickGroup = TG_PrePhysics; this->PrimaryActorTick.bTickEvenWhenPaused = false; this->PrimaryActorTick.bCanEverTick = true; this->PrimaryActorTick.bStartWithTickEnabled = true; this->PrimaryActorTick.bAllowTickOnDedicatedServer = true; this->PrimaryActorTick.TickInterval = 0;
	this->bReplicateMovement = true;
	this->bReplicates = true;
	this->InitialLifeSpan = 3;
}
void AFGNobeliskExplosive::GetLifetimeReplicatedProps(TArray< FLifetimeProperty >& OutLifetimeProps) const{ }
void AFGNobeliskExplosive::OnImpact(const FHitResult& hitResult){ }
float AFGNobeliskExplosive::TakeDamage(float DamageAmount,  FDamageEvent const& DamageEvent,  AController* EventInstigator, AActor* DamageCauser){ return float(); }
bool AFGNobeliskExplosive::ShouldSave_Implementation() const{ return bool(); }
bool AFGNobeliskExplosive::NeedTransform_Implementation(){ return bool(); }
void AFGNobeliskExplosive::SetToDetonate(float timeUntilDetonate){ }
void AFGNobeliskExplosive::OnRep_DetonateIn(){ }
void AFGNobeliskExplosive::SetAndEnableRotation(float scale){ }
