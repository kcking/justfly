// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGConveyorAttachmentHologram.h"
#include "FGBuildableConveyorAttachment.h"
#include "FGBuildableConveyorBelt.h"
#include "FGBuildableRoad.h"
#include "FGBuildableRailroadTrack.h"
#include "FGBuildableFoundation.h"

AFGConveyorAttachmentHologram::AFGConveyorAttachmentHologram() : Super() {
	this->mMaxValidTurnOffset = 240;
	this->mMaxValidTurnAngle = 3;
	this->mMaxPlacementFloorAngle = 35;
	this->mValidHitClasses.Add(AFGBuildableFoundation::StaticClass()); this->mValidHitClasses.Add(AFGBuildableRailroadTrack::StaticClass()); this->mValidHitClasses.Add(AFGBuildableRoad::StaticClass()); this->mValidHitClasses.Add(AFGBuildableConveyorBelt::StaticClass()); this->mValidHitClasses.Add(AFGBuildableConveyorAttachment::StaticClass());
	this->bHidden = true;
	this->bReplicates = true;
}
void AFGConveyorAttachmentHologram::SetHologramLocationAndRotation(const FHitResult& hitResult){ }
bool AFGConveyorAttachmentHologram::TrySnapToActor(const FHitResult& hitResult){ return bool(); }
void AFGConveyorAttachmentHologram::BeginPlay(){ }
bool AFGConveyorAttachmentHologram::IsValidHitResult(const FHitResult& hitResult) const{ return bool(); }
int32 AFGConveyorAttachmentHologram::GetRotationStep() const{ return int32(); }
void AFGConveyorAttachmentHologram::ConfigureComponents( AFGBuildable* inBuildable) const{ }
void AFGConveyorAttachmentHologram::CheckValidPlacement(){ }
FVector AFGConveyorAttachmentHologram::GetGuideLinesBaseLocation(){ return FVector(); }
void AFGConveyorAttachmentHologram::SnapToConnection( UFGFactoryConnectionComponent* connectiontoSnapTo,  UFGFactoryConnectionComponent* myConnectionToSnapWith, FVector locationToDetermineSideIfAplicable){ }
FName AFGConveyorAttachmentHologram::mInputConnection1 = FName();
FName AFGConveyorAttachmentHologram::mOutputConnection1 = FName();
