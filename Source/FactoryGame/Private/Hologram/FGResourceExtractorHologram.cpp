// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGResourceExtractorHologram.h"
#include "FGBuildableRoad.h"
#include "FGBuildableRailroadTrack.h"
#include "FGBuildableFoundation.h"

AFGResourceExtractorHologram::AFGResourceExtractorHologram() : Super() {
	this->mMaxPlacementFloorAngle = 35;
	this->mValidHitClasses.Add(AFGBuildableFoundation::StaticClass()); this->mValidHitClasses.Add(AFGBuildableRailroadTrack::StaticClass()); this->mValidHitClasses.Add(AFGBuildableRoad::StaticClass());
	this->bHidden = true;
	this->bReplicates = true;
}
void AFGResourceExtractorHologram::BeginPlay(){ }
bool AFGResourceExtractorHologram::TrySnapToActor(const FHitResult& hitResult){ return bool(); }
bool AFGResourceExtractorHologram::TryUpgrade(const FHitResult& hitResult){ return bool(); }
void AFGResourceExtractorHologram::SetHologramLocationAndRotation(const FHitResult& hitResult){ }
bool AFGResourceExtractorHologram::DoMultiStepPlacement(bool isInputFromARelease){ return bool(); }
bool AFGResourceExtractorHologram::IsValidHitResult(const FHitResult& hitResult) const{ return bool(); }
AActor* AFGResourceExtractorHologram::GetUpgradedActor() const{ return nullptr; }
void AFGResourceExtractorHologram::CheckValidPlacement(){ }
void AFGResourceExtractorHologram::ConfigureActor( AFGBuildable* inBuildable) const{ }
void AFGResourceExtractorHologram::ConfigureComponents( AFGBuildable* inBuildable) const{ }
void AFGResourceExtractorHologram::CheckResourcesAvailable(){ }
void AFGResourceExtractorHologram::CheckMinimumDepth(){ }
