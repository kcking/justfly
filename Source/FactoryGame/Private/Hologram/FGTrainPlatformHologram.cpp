// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGTrainPlatformHologram.h"
#include "FGBuildableTrainPlatform.h"
#include "FGBuildableRoad.h"
#include "FGBuildableRailroadTrack.h"
#include "FGBuildableFoundation.h"

AFGTrainPlatformHologram::AFGTrainPlatformHologram() : Super() {
	this->mMaxPlacementFloorAngle = 35;
	this->mValidHitClasses.Add(AFGBuildableFoundation::StaticClass()); this->mValidHitClasses.Add(AFGBuildableRailroadTrack::StaticClass()); this->mValidHitClasses.Add(AFGBuildableRoad::StaticClass()); this->mValidHitClasses.Add(AFGBuildableTrainPlatform::StaticClass());
	this->mUseBuildClearanceOverlapSnapp = true;
	this->bHidden = true;
	this->bReplicates = true;
}
void AFGTrainPlatformHologram::GetLifetimeReplicatedProps(TArray< FLifetimeProperty >& OutLifetimeProps) const{ }
void AFGTrainPlatformHologram::BeginPlay(){ }
void AFGTrainPlatformHologram::ScrollRotate(int32 delta, int32 step){ }
void AFGTrainPlatformHologram::SpawnChildren(AActor* hologramOwner, FVector spawnLocation, APawn* hologramInstigator){ }
AActor* AFGTrainPlatformHologram::Construct(TArray< AActor* >& out_children, FNetConstructionID netConstructionID){ return nullptr; }
USceneComponent* AFGTrainPlatformHologram::SetupComponent(USceneComponent* attachParent, UActorComponent* componentTemplate, const FName& componentName){ return nullptr; }
void AFGTrainPlatformHologram::ConfigureActor( AFGBuildable* inBuildable) const{ }
void AFGTrainPlatformHologram::ConfigureComponents( AFGBuildable* inBuildable) const{ }
void AFGTrainPlatformHologram::SetHologramLocationAndRotation(const FHitResult& hitResult){ }
int32 AFGTrainPlatformHologram::GetRotationStep() const{ return int32(); }
void AFGTrainPlatformHologram::CheckClearance(){ }
UFGTrainPlatformConnection* AFGTrainPlatformHologram::FindOverlappingConnectionComponent(const FVector& location, float actorOverlapRadius, float toleranceRadius, bool ignoreSelf, bool ignoreIsConnected) const{ return nullptr; }
