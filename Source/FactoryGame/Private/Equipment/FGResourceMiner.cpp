// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGResourceMiner.h"

AFGResourceMiner::AFGResourceMiner() : Super() {
	this->mEquipmentSlot = EEquipmentSlot::ES_ARMS;
	this->mArmAnimation = EArmEquipment::AE_ResourceCollector;
	this->PrimaryActorTick.TickGroup = TG_PrePhysics; this->PrimaryActorTick.EndTickGroup = TG_PrePhysics; this->PrimaryActorTick.bTickEvenWhenPaused = false; this->PrimaryActorTick.bCanEverTick = true; this->PrimaryActorTick.bStartWithTickEnabled = false; this->PrimaryActorTick.bAllowTickOnDedicatedServer = true; this->PrimaryActorTick.TickInterval = 0;
	this->bOnlyRelevantToOwner = true;
	this->bNetUseOwnerRelevancy = true;
	this->bReplicates = true;
}
void AFGResourceMiner::GetLifetimeReplicatedProps(TArray< FLifetimeProperty >& OutLifetimeProps) const{ }
void AFGResourceMiner::Tick(float DeltaSeconds){ }
void AFGResourceMiner::UnEquip(){ }
bool AFGResourceMiner::ShouldSaveState() const{ return bool(); }
void AFGResourceMiner::DoMine(){ }
void AFGResourceMiner::ExtractResources(){ }
void AFGResourceMiner::RemoveEquipment(){ }
int32 AFGResourceMiner::GetNumResourcesPerExtract() const{ return int32(); }
void AFGResourceMiner::Server_ExtractResources_Implementation(){ }
bool AFGResourceMiner::Server_ExtractResources_Validate(){ return bool(); }
