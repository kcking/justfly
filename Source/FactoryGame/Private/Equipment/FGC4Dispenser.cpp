// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGC4Dispenser.h"
#include "FGDamageType.h"

AFGC4Dispenser::AFGC4Dispenser() : Super() {
	this->mDelayBetweenExplosions = 0.25;
	this->mMagSize = 5;
	this->mDamageTypeClass = UFGDamageType::StaticClass();
	this->mReloadTime = 1.5;
	this->mFireRate = 0.5;
	this->mEquipmentSlot = EEquipmentSlot::ES_ARMS;
	this->mArmAnimation = EArmEquipment::AE_Nobelisk;
	this->PrimaryActorTick.TickGroup = TG_PrePhysics; this->PrimaryActorTick.EndTickGroup = TG_PrePhysics; this->PrimaryActorTick.bTickEvenWhenPaused = false; this->PrimaryActorTick.bCanEverTick = true; this->PrimaryActorTick.bStartWithTickEnabled = false; this->PrimaryActorTick.bAllowTickOnDedicatedServer = true; this->PrimaryActorTick.TickInterval = 0;
	this->bOnlyRelevantToOwner = true;
	this->bNetUseOwnerRelevancy = true;
	this->bReplicates = true;
}
bool AFGC4Dispenser::ShouldSaveState() const{ return bool(); }
void AFGC4Dispenser::OnPrimaryFirePressed(){ }
void AFGC4Dispenser::OnPrimaryFireReleased(){ }
float AFGC4Dispenser::GetChargePct(){ return float(); }
void AFGC4Dispenser::Server_SpawnC4_Implementation(int32 throwForce){ }
bool AFGC4Dispenser::Server_SpawnC4_Validate(int32 throwForce){ return bool(); }
void AFGC4Dispenser::DetonateNextCharge(){ }
void AFGC4Dispenser::OnDetonatePressed(){ }
void AFGC4Dispenser::Server_DetonatePressed_Implementation(){ }
bool AFGC4Dispenser::Server_DetonatePressed_Validate(){ return bool(); }
void AFGC4Dispenser::AddEquipmentActionBindings(){ }
