// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGConsumableEquipment.h"

AFGConsumableEquipment::AFGConsumableEquipment() : Super() {
	this->mEquipmentSlot = EEquipmentSlot::ES_ARMS;
	this->mArmAnimation = EArmEquipment::AE_Consumables;
	this->PrimaryActorTick.TickGroup = TG_PrePhysics; this->PrimaryActorTick.EndTickGroup = TG_PrePhysics; this->PrimaryActorTick.bTickEvenWhenPaused = false; this->PrimaryActorTick.bCanEverTick = true; this->PrimaryActorTick.bStartWithTickEnabled = false; this->PrimaryActorTick.bAllowTickOnDedicatedServer = true; this->PrimaryActorTick.TickInterval = 0;
	this->bOnlyRelevantToOwner = true;
	this->bNetUseOwnerRelevancy = true;
	this->bReplicates = true;
}
bool AFGConsumableEquipment::ShouldSaveState() const{ return bool(); }
void AFGConsumableEquipment::OnPrimaryFire(){ }
void AFGConsumableEquipment::OnConsumePressed(){ }
void AFGConsumableEquipment::GetConsumeable(TSubclassOf<  UFGConsumableDescriptor >& out_consumeable, int32& out_numConsumeable) const{ }
void AFGConsumableEquipment::Server_PrimaryFire_Implementation(){ }
bool AFGConsumableEquipment::Server_PrimaryFire_Validate(){ return bool(); }
void AFGConsumableEquipment::PlayConsumeEffects_Implementation( UFGConsumableDescriptor* consumable){ }
void AFGConsumableEquipment::AddEquipmentActionBindings(){ }
