// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGResourceScanner.h"

AFGResourceScanner::AFGResourceScanner() : Super() {
	this->mNrOfClosestClustersToMark = 3;
	this->mHoldDownDurationForUI = 0.5;
	this->mDistBetweenNodesInCluster = 1000;
	this->mArmAnimation = EArmEquipment::AE_ResourceScanner;
	this->PrimaryActorTick.TickGroup = TG_PrePhysics; this->PrimaryActorTick.EndTickGroup = TG_PrePhysics; this->PrimaryActorTick.bTickEvenWhenPaused = false; this->PrimaryActorTick.bCanEverTick = true; this->PrimaryActorTick.bStartWithTickEnabled = false; this->PrimaryActorTick.bAllowTickOnDedicatedServer = true; this->PrimaryActorTick.TickInterval = 0;
	this->bOnlyRelevantToOwner = true;
	this->bNetUseOwnerRelevancy = true;
	this->bReplicates = true;
}
void AFGResourceScanner::BeginPlay(){ }
void AFGResourceScanner::Tick(float dt){ }
bool AFGResourceScanner::ShouldSaveState() const{ return bool(); }
TArray< TSubclassOf< UFGResourceDescriptor > > AFGResourceScanner::GetScannableResources() const{ return TArray<TSubclassOf<UFGResourceDescriptor> >(); }
void AFGResourceScanner::SetResourceDescriptorToScanFor(TSubclassOf< UFGResourceDescriptor > inClass){ }
void AFGResourceScanner::UnEquip(){ }
void AFGResourceScanner::Server_ScanReleased_Implementation(){ }
bool AFGResourceScanner::Server_ScanReleased_Validate(){ return bool(); }
void AFGResourceScanner::ScanReleased(){ }
void AFGResourceScanner::AddEquipmentActionBindings(){ }
void AFGResourceScanner::OnScanPressed(){ }
void AFGResourceScanner::OnScanReleased(){ }
void AFGResourceScanner::GenerateNodeClusters(){ }
void AFGResourceScanner::GetNodesWithinDistance(AFGResourceNode* node, float dist, TArray< AFGResourceNode* >& clusterNodes, TArray< AFGResourceNode* >& remainingNodes){ }
void AFGResourceScanner::OnCheatBoardOpened(){ }
